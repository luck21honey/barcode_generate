{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: \"http://localhost:3000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from './common.service';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n  uploadFlag: Boolean = false;\n  generateFlag: Boolean = true;\n  generateSpinner: Boolean = false;\n  downloadFlag: Boolean = false;\n  downloadSpinner: Boolean = false;\n  downloadURL: string = environment.API_URL + '/download';\n\n  constructor(private toastr: ToastrService, private service: CommonService) { }\n\n  uploadFile(files: FileList) {\n    if (files && files.length > 0) {\n      let file: File = files.item(0);\n      let fileReader: FileReader = new FileReader();\n      fileReader.readAsText(file);\n      fileReader.onload = ev => {\n        let csvdata = fileReader.result.toString();\n        let body = { data: csvdata };\n\n        this.uploadFlag = true;\n        this.service.fileUpload(body)\n          .subscribe(data => {\n            this.uploadFlag = false;\n            this.generateFlag = false;\n\n            if (data.error_code) {\n              this.toastr.error(data.err_desc, \"Oops\",);\n              return;\n            }\n\n            this.toastr.success(data.message, \"Success\");\n          });\n      };\n    }\n  }\n\n\n  generate() {\n    this.generateSpinner = true;\n    this.service.generate()\n      .subscribe(data => {\n        this.generateSpinner = false;\n        this.generateFlag = false;\n\n        if (data.error_code) {\n          this.toastr.error(data.err_desc, \"Oops\",);\n          return;\n        }\n\n        this.downloadFlag = true;\n        this.toastr.success(data.message, \"Success\",);\n      });\n  }\n\n  download() {\n    this.generateFlag = false;\n    this.downloadFlag = false;\n  }\n\n}\n","<div class=\"container text-center\">\n  <h1>Generate Barcode From CSV File</h1>\n\n  <div class=\"row justify-content-around align-items-center\">\n    <div class=\"col-auto mt-3\">\n      <input type=\"file\" hidden #uploader (change)=\"uploadFile($event.target.files)\">\n      <button class=\"btn btn-success\" (click)=\"uploader.click()\" [disabled]=\"downloadFlag\">\n        <i class=\"fa fa-upload\"></i>\n        Upload\n        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"uploadFlag\"></span>\n      </button>\n    </div>\n\n    <div class=\"col-auto\" *ngIf=\"!downloadFlag\">\n      <button type=\"button\" class=\"btn btn-info\" [disabled]=\"generateFlag\" (click)=\"generate()\">\n        <i class=\"fa fa-cog\"></i>\n        Generate\n        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"generateSpinner\"></span>\n      </button>\n    </div>\n\n    <div class=\"col-auto\" *ngIf=\"downloadFlag\">\n      <a class=\"btn btn-info\" [href]=\"downloadURL\" (click)=\"download()\">\n        <i class=\"fa fa-download\"></i>\n        Download\n        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"downloadSpinner\"></span>\n      </a>\n    </div>\n\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({ timeOut: 3000, positionClass: 'toast-bottom-right', preventDuplicates: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from \"@angular/common/http\"\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  API_URL: string = environment.API_URL;\n\n  constructor(private http: HttpClient) { }\n\n  fileUpload(body: any): Observable<any> {\n    return this.http.post<any>(\n      this.API_URL + \"/upload\",\n      body\n    );\n  }\n\n  generate(): Observable<any> {\n    return this.http.get<any>(\n      this.API_URL + \"/generate\"\n    )\n  }\n\n  test(): Observable<any> {\n    return this.http.get<any>(\n      this.API_URL + \"/test\"\n    )\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}